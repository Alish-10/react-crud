{"ast":null,"code":"import _toConsumableArray from\"/home/alish/React_Projects/react-crud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/alish/React_Projects/react-crud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export default(function(state,action){switch(action.type){case'REMOVE_USER':return _objectSpread(_objectSpread({},state),{},{users:state.users.filter(function(user){return user.id!==action.payload;})});case'ADD_USER':return _objectSpread(_objectSpread({},state),{},{users:[action.payload].concat(_toConsumableArray(state.users))});case'EDIT_USER':var updateUser=action.payload;var updateUsers=state.users.map(function(user){if(user.id===updateUser.id){return updateUser;}return user;});return _objectSpread(_objectSpread({},state),{},{users:updateUsers});default:return state;}});","map":{"version":3,"sources":["/home/alish/React_Projects/react-crud/src/context/AppReducer.js"],"names":["state","action","type","users","filter","user","id","payload","updateUser","updateUsers","map"],"mappings":"+TAAA,eAAe,SAACA,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,aAAL,CACE,sCACKF,KADL,MAEEG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmB,SAAAC,IAAI,CAAI,CAChC,MAAOA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAM,CAACM,OAA1B,CACD,CAFM,CAFT,GAMF,IAAK,UAAL,CACE,sCACKP,KADL,MAEEG,KAAK,EAAGF,MAAM,CAACM,OAAV,4BAAsBP,KAAK,CAACG,KAA5B,EAFP,GAIF,IAAK,WAAL,CACE,GAAMK,CAAAA,UAAU,CAAGP,MAAM,CAACM,OAA1B,CAEA,GAAME,CAAAA,WAAW,CAAGT,KAAK,CAACG,KAAN,CAAYO,GAAZ,CAAgB,SAAAL,IAAI,CAAI,CAC1C,GAAIA,IAAI,CAACC,EAAL,GAAYE,UAAU,CAACF,EAA3B,CAA+B,CAC7B,MAAOE,CAAAA,UAAP,CACD,CACD,MAAOH,CAAAA,IAAP,CACD,CALmB,CAApB,CAMA,sCACKL,KADL,MAEEG,KAAK,CAAEM,WAFT,GAKF,QACE,MAAOT,CAAAA,KAAP,CA5BJ,CA8BD,CA/BD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => {\n          return user.id !== action.payload;\n        })\n      }\n    case 'ADD_USER':\n      return {\n        ...state,\n        users: [action.payload, ...state.users]\n      }\n    case 'EDIT_USER':\n      const updateUser = action.payload;\n\n      const updateUsers = state.users.map(user => {\n        if (user.id === updateUser.id) {\n          return updateUser;\n        }\n        return user;\n      })\n      return {\n        ...state,\n        users: updateUsers\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}